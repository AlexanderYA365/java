<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                 http://www.springframework.org/schema/security
                 http://www.springframework.org/schema/security/spring-security-5.7.xsd">

    <!--    <http auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager">-->
    <!--        <intercept-url pattern="/index.jsp" access="isAnonymous()"/>-->
    <!--        <intercept-url pattern="/main" access="hasRole('USER') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/jsp/admin-panel.jsp" access="hasRole('USER') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/account-message*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/account-write-message*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/edit-account-settings*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/my-account*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/account-friends*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/add-friend-account*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/show-friend*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/account-find-group*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/account-group*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/create-group*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!--        <intercept-url pattern="/show-group*" access="hasRole('ADMIN') and hasRole('ADMIN')"/>-->
    <!---->
    <!--        <form-login-->
    <!--                login-page="/index.jsp"-->
    <!--                authentication-success-forward-url="/main"-->
    <!--                authentication-failure-url="/index.jsp?error=true"-->
    <!--                username-parameter="username"-->
    <!--                password-parameter="password"-->
    <!--                always-use-default-target="true"/>-->

    <!--        <logout logout-success-url="/"/>-->
    <!--                <remember-me key="checkbox" token-validity-seconds="300"/>-->
    <!--        <csrf disabled="true"/>-->
    <!--    </http>-->
    <!---->
    <!--    <authentication-manager id="authenticationManager">-->
    <!--        <authentication-provider>-->
    <!--            <password-encoder ref="encoder"/>-->
    <!--            <jdbc-user-service data-source-ref="dataSource"-->
    <!--                               users-by-username-query="SELECT username, password FROM account WHERE username= ?"-->
    <!--                               authorities-by-username-query="SELECT a.role FROM socialnetwork.account a WHERE a.username = ?"/>-->
    <!--        </authentication-provider>-->
    <!--    </authentication-manager>-->
    <!---->
    <!--    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">-->
    <!--        <beans:constructor-arg name="strength" value="10"/>-->
    <!--    </beans:bean>-->


    <!--    <authentication-manager>-->
    <!--        <authentication-provider user-service-ref="UserDetailService">-->
    <!--            <password-encoder ref="passwordEncoder"/>-->
    <!--        </authentication-provider>-->
    <!--    </authentication-manager>-->
    <!---->
    <beans:bean id="UserDetailService" class="com.getjavajob.training.yakovleva.service.MyUserDetailsService"/>
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans:beans>