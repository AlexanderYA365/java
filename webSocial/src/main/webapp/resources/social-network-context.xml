<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                             http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                             http://www.springframework.org/schema/tx
                             http://www.springframework.org/schema/tx/spring-tx.xsd
                             http://www.springframework.org/schema/jee
                             http://www.springframework.org/schema/jee/spring-jee.xsd
                             http://www.springframework.org/schema/aop
                             http://www.springframework.org/schema/aop/spring-aop.xsd">

    <import resource="classpath:service-context.xml"/>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/socnetwork" expected-type="javax.sql.DataSource"/>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.id.new_generator_mappings">false</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.getjavajob.training.yakovleva.common.Phone</value>
                <value>com.getjavajob.training.yakovleva.common.Account</value>
            </list>
        </property>
    </bean>
    <!--    -->
    <!--    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
    <!--        <property name="dataSource" ref="dataSource"/>-->
    <!--        <property name="packagesToScan" value="com.getjavajob.training.yakovleva.common.*"/>-->
    <!--        <property name="jpaVendorAdapter">-->
    <!--            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">-->
    <!--                <property name="showSql" value="true"/>-->
    <!--                <property name="database" value="MYSQL"/>-->
    <!--            </bean>-->
    <!--        </property>-->
    <!--    </bean>-->

    <aop:config>
        <aop:pointcut id="serviceOperation"
                      expression="execution(* com.getjavajob.training.yakovleva.service..Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!--        <tx:attributes>-->
        <!--            <tx:method name="read*" read-only="true"/>-->
        <!--            <tx:method name="get*" read-only="true"/>-->
        <!--        </tx:attributes>-->
    </tx:advice>

</beans>